/**********************************************************************************************************************************************************
 * 
                         _   _                 _                              _   _                                     _     
                        | | (_)               | |                     /\     | | | |                                   | |    
                      __| |  _   ___   _ __   | |   __ _   _   _     /  \    | | | |   ___    __ _   _ __    ___       | |__  
                     / _` | | | / __| | '_ \  | |  / _` | | | | |   / /\ \   | | | |  / _ \  / _` | | '__|  / _ \      | '_ \ 
                    | (_| | | | \__ \ | |_) | | | | (_| | | |_| |  / ____ \  | | | | |  __/ | (_| | | |    | (_) |  _  | | | |
                     \__,_| |_| |___/ | .__/  |_|  \__,_|  \__, | /_/    \_\ |_| |_|  \___|  \__, | |_|     \___/  (_) |_| |_|
                                      | |                   __/ |                             __/ |                           
                                      |_|                  |___/                             |___/                

 *                              
 ***********************************************************************************************************************************************************
*   Este .h contiene tipos de datos y constantes que son utilizados para el manejo del display 
*
 **********************************************************************************************************************************************************/

#ifndef DISPLAY_H
#define DISPLAY_H

#include "allegroUtilities.h"
#include <allegro5/allegro_image.h>
#include <allegro5/allegro_font.h>
#include <allegro5/allegro_ttf.h> //Manejo de ttfs
#include <allegro5/allegro_primitives.h>
#include <allegro5/allegro_audio.h>
#include <allegro5/allegro_acodec.h> 
#include "audio.h"

/***********************************************************************************************************************************************************
 * 
 *                                          EXTRUCTS
 * 
 * ********************************************************************************************************************************************************/

    /**************************************************************************
     Audio_t: Consiste en un puntero a un sample y un volumen individual
              asociado al sample
    ***************************************************************************/

typedef struct{

    ALLEGRO_SAMPLE * sample;
    float volume;

}audio_t;

/*******************************************************************************************************************************************
*******************************************************************************************************************************************/

/***********************************************************************************************************************************************************
 * 
 *                                          PROTOTIPOS
 * 
 * ********************************************************************************************************************************************************/

    /******************************************************************************
     *  SHOW ENTITY
     *      Esta funcion recibe como unico parametro un puntero a un object_t
     *      y se encarga de mostrarlo en pantalla
     * 
     * ***************************************************************************/

int showEntity(object_t * entity);

    /******************************************************************************
     *  SHOW OBJECTS
     *      Esta funcion recibe como unico parametro un puntero al primer elemento
     *      de una lista de objetos (object_t) y los imprime en pantalla 
     * 
     * ***************************************************************************/

int showObjects(object_t * inicial);

    /******************************************************************************
     *  SHOW TEXT
     *      Esta funcion recibe como unico parametro un puntero a un texto_t
     *      y se encarga de mostrarlo en pantalla
     * 
     * ***************************************************************************/

void showText(texto_t * data);

    /******************************************************************************
     *  SHOW TEXTS
     *      Esta funcion recibe como unico parametro un puntero al primer elemento
     *      de una lista de textos (texto_t) y los imprime en pantalla 
     * 
     * ***************************************************************************/

int showTexts(texto_t * inicial);

    /******************************************************************************
     *  SHOW SPRITE
     *      Esta funcion recibe como unico parametro un puntero a un sprite_t
     *      y se encarga de mostrarlo en pantalla
     * 
     * ***************************************************************************/

int showSprite(sprite_t * sprite);

    /******************************************************************************
     *  SHOW TEXTS
     *      Esta funcion recibe como unico parametro un puntero al primer elemento
     *      de una lista de sprites (sprite_t) y los imprime en pantalla 
     * 
     * ***************************************************************************/

int showSprites(sprite_t * inicial);

/*******************************************************************************************************************************************
*******************************************************************************************************************************************/

/***********************************************************************************************************************************************************
 * 
 *                                          CONSTANTES
 * 
 * ********************************************************************************************************************************************************/

#define BGHEIGHT 768        //Altura del fondo
#define BGVEL 5             //Velocidad con la que se mueve el fondo

#define BGCOLOR 0,0,0       //Color del background (negro)

/*******************************************************************************************************************************************
*******************************************************************************************************************************************/

#endif //display.h